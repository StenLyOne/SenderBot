require("dotenv").config();
const express = require("express");
const axios = require("axios");
const cors = require("cors");

const app = express();
const PORT = process.env.PORT || 3000;
const TELEGRAM_API = `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`;
const CHAT_ID = process.env.TELEGRAM_CHAT_ID;

app.use(cors());
app.use(express.json()); // –ü–∞—Ä—Å–∏–º JSON

app.post("/send", async (req, res) => {
  try {
    const { name, contact, message, budget } = req.body;

    if (!name || !contact) {
      return res.status(400).json({ error: "–ò–º—è –∏ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });
    }

    const text = `
üì© **–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞**
üë§ –ò–º—è: ${name}
üìû –°–≤—è–∑—å: ${contact}
üí∞ –ë—é–¥–∂–µ—Ç: ${budget || "–ù–µ —É–∫–∞–∑–∞–Ω"}
üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${message || "–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"}
`;

    await axios.post(TELEGRAM_API, {
      chat_id: CHAT_ID,
      text: text,
      parse_mode: "Markdown",
    });

    res.status(200).json({ success: true, message: "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!" });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", error);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
});

app.post("/visit", async (req, res) => {
  try {
    const text = `üëÄ –ù–æ–≤—ã–π –≤–∏–∑–∏—Ç –Ω–∞ —Å–∞–π—Ç! –ö—Ç–æ-—Ç–æ —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–∫—Ä—ã–ª —Å—Ç—Ä–∞–Ω–∏—Ü—É.`;

    await axios.post(TELEGRAM_API, {
      chat_id: CHAT_ID,
      text: text,
      parse_mode: "Markdown",
    });

    res.status(200).json({ success: true, message: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!" });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", error);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
});

app.listen(PORT, () => console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
